{"ast":null,"code":"import { combineReducers } from \"redux\";\n\n// Sample reducer to prevent \"Store does not have a valid reducer\" error\nconst sampleReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"TEST_ACTION\":\n      return {\n        ...state,\n        message: \"Redux is working!\"\n      };\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  sample: sampleReducer // Add actual reducers here\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","sampleReducer","state","action","type","message","rootReducer","sample"],"sources":["C:/medicare/frontend/src/redux/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\n// Sample reducer to prevent \"Store does not have a valid reducer\" error\r\nconst sampleReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"TEST_ACTION\":\r\n      return { ...state, message: \"Redux is working!\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  sample: sampleReducer, // Add actual reducers here\r\n});\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;;AAEvC;AACA,MAAMC,aAAa,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,KAAK;EAC5C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGF,KAAK;QAAEG,OAAO,EAAE;MAAoB,CAAC;IACnD;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,MAAMI,WAAW,GAAGN,eAAe,CAAC;EAClCO,MAAM,EAAEN,aAAa,CAAE;AACzB,CAAC,CAAC;AAEF,eAAeK,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}